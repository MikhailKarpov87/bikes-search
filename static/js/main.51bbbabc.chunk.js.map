{"version":3,"sources":["constants.js","reducers/index.js","reducers/reducer_searchterm.js","reducers/reducer_current_searchterm.js","reducers/reducer_search.js","reducers/reducer_shops.js","reducers/reducer_categories.js","reducers/reducer_loading.js","reducers/reducer_page.js","reducers/reducer_sort.js","reducers/reducer_showfilter.js","reducers/reducer_filters.js","components/search/filter_list.js","actions/index.js","components/search/search_filter.js","components/search/search_tips.js","components/search/search_form.js","components/search/result_item.js","components/spinner.js","components/search/result_list.js","components/search/sort_button.js","components/search/sort_panel.js","components/footer.js","components/search.js","App.js","index.js"],"names":["API_URL","searchTipTexts","sortFields","price","shop_id","FETCHING_DATA","FETCHING_DATA_SUCCESS","FETCHING_DATA_FAILURE","UPDATE_SEARCHTERM","GET_SHOPLIST","GET_CATEGORIES","UPDATE_FILTER","SORT_RESULTS","TOGGLE_FILTER","rootReducer","combineReducers","searchTerm","state","arguments","length","undefined","action","type","payload","currentSearchTerm","results","oldResults","data","newResults","newRequest","concat","Object","objectSpread","resultsNum","error","shops","categories","loading","page","sort","_action$payload","sortBy","sortOrder","showFilter","status","filter","_","keys","filterType","filterValue","toConsumableArray","id","value","defineProperty","FilterList","props","label","list","selected","handleFilter","name","react_default","a","createElement","map","key","className","checked","includes","onChange","fetchData","dispatch","getState","_getState","_getState$sort","_getState$filter","shopsQuery","join","categoriesQuery","sortQuery","newPage","getData","axios","get","then","getDataSuccess","catch","getDataFailure","updateSearchTerm","SearchFilter","event","currentTarget","this","updateFilter","_this","_this$props","size","filter_list","Component","connect","SearchTips","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","n","_this2","interval","setInterval","nextMessage","clearInterval","num","setState","_this3","text","onClick","handleClick","SearchForm","debounce","getShopList","getCategories","toggleFilter","search_tips","handleInputChange","onKeyPress","uk-icon","search_filter","SearchResultItem","_props$result","result","url","shopName","catName","href","target","rel","Spinner","isLoading","uk-spinner","ResultList","window","addEventListener","scrollingElement","document","scrollTop","innerHeight","offsetHeight","loadMoreResults","_this$props2","class","uk-alert","uk-close","result_item","getShopName","getCategoryName","category","spinner","SortButton","buttonStyle","orderSign","SortPanel","_this$props$sort","sortResults","sort_button","Footer","SearchMain","search_form","sort_panel","result_list","footer","initialState","myStore","composeWithDevTools","applyMiddleware","thunk","createStore","App","es","store","reducers","search","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.51bbbabc.chunk.js","sourcesContent":["//URL of server API\nexport const API_URL = \"https://dev.getyoumedia.com/bike_search/api/api.php\";\n\n//Search tips to show it SearchTips component\nexport const searchTipTexts = [\"амортизатор fox\", \"заднее колесо\", \"перчатки oakley\", \"шлем POC\"];\n\n//Update interval for search tips in ms\nexport const searchTipUpdateInterval = 5000;\n\n//Sort fields for results. Format [name: label]\nexport const sortFields = {\n  price: \"Цене\",\n  shop_id: \"Магазину\"\n};\n\n//Actions names\nexport const FETCHING_DATA = \"FETCHING_DATA\";\nexport const FETCHING_DATA_SUCCESS = \"FETCHING_DATA_SUCCESS\";\nexport const FETCHING_DATA_FAILURE = \"FETCHING_DATA_FAILURE\";\nexport const UPDATE_SEARCHTERM = \"UPDATE_SEARCHTERM\";\nexport const GET_SHOPLIST = \"GET_SHOPLIST\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\nexport const UPDATE_FILTER = \"UPDATE_FILTER\";\nexport const SORT_RESULTS = \"SORT_RESULTS\";\nexport const TOGGLE_FILTER = \"TOGGLE_FILTER\";\n","import { combineReducers } from \"redux\";\nimport page from \"./reducer_page\";\nimport results from \"./reducer_search\";\nimport searchTerm from \"./reducer_searchterm\";\nimport shops from \"./reducer_shops\";\nimport currentSearchTerm from \"./reducer_current_searchterm\";\nimport categories from \"./reducer_categories\";\nimport loading from \"./reducer_loading\";\nimport showFilter from \"./reducer_showfilter\";\nimport filter from \"./reducer_filters\";\nimport sort from \"./reducer_sort\";\n\nconst rootReducer = combineReducers({\n  searchTerm,\n  currentSearchTerm,\n  results,\n  shops,\n  categories,\n  loading,\n  page,\n  sort,\n  showFilter,\n  filter\n});\n\nexport default rootReducer;\n","import { UPDATE_SEARCHTERM } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UPDATE_SEARCHTERM:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA_SUCCESS } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA_SUCCESS:\n      return action.payload.searchTerm;\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, FETCHING_DATA_SUCCESS, FETCHING_DATA_FAILURE } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA:\n      //  action.payload is newRequest. Return empty object if this is new search request\n      return action.payload ? {} : state;\n\n    case FETCHING_DATA_SUCCESS:\n      const oldResults = state.data || [];\n      const newResults = !action.payload.newRequest\n        ? oldResults.concat(action.payload.data.data.results)\n        : action.payload.data.data.results;\n\n      return {\n        ...state,\n        data: newResults,\n        resultsNum: action.payload.data.data.resultsNum\n      };\n\n    case FETCHING_DATA_FAILURE:\n      return {\n        ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_SHOPLIST } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_SHOPLIST:\n      return action.payload.data;\n\n    default:\n      return state;\n  }\n}\n","import { GET_CATEGORIES } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return action.payload.data;\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA, FETCHING_DATA_SUCCESS, FETCHING_DATA_FAILURE } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA:\n      return true;\n\n    case FETCHING_DATA_SUCCESS:\n    case FETCHING_DATA_FAILURE:\n      return false;\n\n    default:\n      return state;\n  }\n}\n","import { FETCHING_DATA_SUCCESS } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCHING_DATA_SUCCESS:\n      return action.payload.page;\n\n    default:\n      return state;\n  }\n}\n","import { SORT_RESULTS } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SORT_RESULTS:\n      const { sortBy, sortOrder } = action.payload;\n      return {\n        sortBy,\n        sortOrder\n      };\n\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_FILTER } from \"../constants\";\n\nexport default function(state = {}, action) {\n  const status = action.status;\n  switch (action.type) {\n    case TOGGLE_FILTER:\n      return status;\n\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\nimport { GET_SHOPLIST, GET_CATEGORIES, UPDATE_FILTER } from \"../constants\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_SHOPLIST:\n      return {\n        ...state,\n        shops: _.keys(action.payload.data)\n      };\n\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: _.keys(action.payload.data)\n      };\n\n    case UPDATE_FILTER:\n      const filterType = action.payload.filterType;\n      //  filterValue is 'checked' value of checbox. If checked = true,\n      //  adding its id value to array, otherwise removing its id from array\n      const filterValue = !action.payload.status\n        ? state[filterType].filter(value => value !== action.payload.id)\n        : [...state[filterType], action.payload.id];\n\n      return {\n        ...state,\n        [filterType]: filterValue\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst FilterList = props => {\n  const { label, list, selected, handleFilter, name } = props;\n  return (\n    <div>\n      <label>\n        <b>{label}</b>\n      </label>\n\n      {_.map(list, (value, key) => (\n        <div key={key}>\n          <input\n            className=\"uk-checkbox\"\n            type=\"checkbox\"\n            key={key}\n            id={key}\n            name={name}\n            checked={selected.includes(key)}\n            onChange={handleFilter}\n          />\n          {value}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nFilterList.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  list: PropTypes.object.isRequired,\n  selected: PropTypes.array.isRequired,\n  handleFilter: PropTypes.func.isRequired\n};\n\nexport default FilterList;\n","import axios from \"axios\";\nimport { API_URL } from \"../constants\";\nimport {\n  FETCHING_DATA,\n  FETCHING_DATA_SUCCESS,\n  FETCHING_DATA_FAILURE,\n  UPDATE_SEARCHTERM,\n  GET_SHOPLIST,\n  GET_CATEGORIES,\n  UPDATE_FILTER,\n  SORT_RESULTS,\n  TOGGLE_FILTER\n} from \"../constants\";\n\n//  Action for getting data from API_URL based on search term.\n//  newRequest argument is flag used to differ new search request\n//  from pagination requests and sort/filter requests.\nexport function fetchData(searchTerm, newRequest) {\n  return (dispatch, getState) => {\n    const {\n      page,\n      currentSearchTerm,\n      sort: { sortBy, sortOrder },\n      filter: { shops, categories }\n    } = getState();\n\n    //  Building API request values based on current state values\n    const shopsQuery = shops ? shops.join() : \"All\";\n    const categoriesQuery = categories ? categories.join() : \"All\";\n    const sortQuery = sortBy && sortOrder ? `&sortBy=${sortBy}&sortOrder=${sortOrder}` : \"\";\n    const newPage = newRequest ? 1 : page + 1;\n\n    //  Stop API request if search term was not changed in input field\n    //  and it was not pagination request (newRequest === true)\n    if (searchTerm === currentSearchTerm && newRequest) return;\n\n    dispatch(getData(newRequest));\n    axios\n      .get(\n        `${API_URL}?search=${searchTerm}&page=${newPage}&shops=${shopsQuery}&categories=${categoriesQuery}${sortQuery}`\n      )\n      .then(data => {\n        dispatch(getDataSuccess(data, searchTerm, newPage, newRequest));\n      })\n      .catch(error => {\n        dispatch(getDataFailure(error));\n      });\n  };\n}\n\n//  Set Loading = true while performing request\nexport function getData(newRequest) {\n  return { type: FETCHING_DATA, payload: newRequest };\n}\n\n//  API request success = dispatching data returned from API\nexport function getDataSuccess(data, searchTerm, page, newRequest) {\n  return {\n    type: FETCHING_DATA_SUCCESS,\n    payload: {\n      data,\n      searchTerm,\n      page,\n      newRequest\n    }\n  };\n}\n\n//  API request failure = dispatching error message\nexport function getDataFailure(error) {\n  return { type: FETCHING_DATA_FAILURE, payload: error };\n}\n\n//  Input onChange handler action\nexport function updateSearchTerm(data) {\n  return { type: UPDATE_SEARCHTERM, payload: data };\n}\n\n//  Action for getting shops list from API\nexport function getShopList() {\n  return dispatch => {\n    axios.get(`${API_URL}?get_shopslist`).then(data => {\n      dispatch({ type: GET_SHOPLIST, payload: data });\n    });\n  };\n}\n\n//  Action for getting categories list from API\nexport function getCategories() {\n  return dispatch => {\n    axios.get(`${API_URL}?get_categories`).then(data => {\n      dispatch({ type: GET_CATEGORIES, payload: data });\n    });\n  };\n}\n\n//  Action for handling filters update\nexport function updateFilter(filterType, id, status) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_FILTER,\n      payload: {\n        id,\n        status,\n        filterType\n      }\n    });\n\n    const { searchTerm } = getState();\n\n    //  If there is a search term, load data from API with updated filters\n    if (searchTerm) dispatch(fetchData(searchTerm, true));\n  };\n}\n\n//  Action for handling sort buttons update\nexport function sortResults(sortBy, sortOrder) {\n  return (dispatch, getState) => {\n    const { searchTerm } = getState();\n\n    //  If sortOrder was not set, sortOrder = ASC, otherwise changing between ASC <=> DESC\n    sortOrder = !sortOrder ? \"ASC\" : sortOrder === \"ASC\" ? \"DESC\" : \"ASC\";\n\n    dispatch({\n      type: SORT_RESULTS,\n      payload: {\n        sortBy,\n        sortOrder\n      }\n    });\n\n    //  If there is a search term, fetching new data from API with updated sort settings\n    if (searchTerm) dispatch(fetchData(searchTerm, true));\n  };\n}\n\n//  Action for toggling show/hide filter panel\nexport function toggleFilter(status) {\n  return { type: TOGGLE_FILTER, status };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport FilterList from \"./filter_list\";\nimport { updateFilter } from \"../../actions\";\n\nclass SearchFilter extends Component {\n  handleFilter(event) {\n    const value = event.currentTarget;\n    this.props.updateFilter(value.name, value.id, value.checked);\n  }\n\n  render() {\n    const { filter, shops, categories, showFilter } = this.props;\n\n    return (\n      <div\n        className={`uk-animation-slide-bottom-medium filter-${\n          showFilter & (_.size(shops) > 0) ? \"expanded\" : \"collapsed\"\n        }`}\n      >\n        <FilterList\n          label=\"Магазины\"\n          list={shops}\n          name=\"shops\"\n          selected={filter.shops}\n          handleFilter={event => this.handleFilter(event)}\n        />\n\n        <FilterList\n          label=\"Категории\"\n          list={categories}\n          name=\"categories\"\n          selected={filter.categories}\n          handleFilter={event => this.handleFilter(event)}\n        />\n      </div>\n    );\n  }\n}\n\nSearchFilter.propTypes = {\n  filter: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    shops: PropTypes.array.isRequired\n  }),\n  shops: PropTypes.object,\n  categories: PropTypes.object,\n  showFilter: PropTypes.bool.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    showFilter: state.showFilter,\n    shops: state.shops,\n    categories: state.categories,\n    filter: state.filter\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { updateFilter }\n)(SearchFilter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { updateSearchTerm, fetchData } from \"../../actions\";\nimport { searchTipTexts, searchTipUpdateInterval } from \"../../constants\";\n\nclass SearchTips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { n: 0 };\n  }\n\n  componentDidMount() {\n    //  Setting interval for rotating search tips\n    this.interval = setInterval(() => this.nextMessage(this.state), searchTipUpdateInterval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  nextMessage(state) {\n    //  This method running in setInterval()\n    //  Looping through array of search tips\n    const num = searchTipTexts[++state.n] ? state.n : 0;\n    this.setState({ n: num });\n  }\n\n  handleClick(searchTerm) {\n    //  When search tip is clicked: update search term in input field,\n    //  fetch search results from API\n    this.props.updateSearchTerm(searchTerm);\n    this.props.fetchData(searchTerm, true);\n  }\n\n  render() {\n    const text = searchTipTexts[this.state.n];\n\n    //  Render component if searchTipTexts is not empty\n    return (\n      searchTipTexts.length && (\n        <div className=\"uk-text-center uk-animation-fade uk-animation-slow search_tip_box\">\n          Найти\n          <span\n            className={`search_tip_text`}\n            key={this.state.n}\n            onClick={() => this.handleClick(text)}\n          >\n            {text}\n          </span>\n        </div>\n      )\n    );\n  }\n}\n\nSearchTips.propTypes = {\n  updateSearchTerm: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { updateSearchTerm, fetchData }\n)(SearchTips);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport SearchFilter from \"./search_filter\";\nimport SearchTips from \"./search_tips\";\nimport {\n  fetchData,\n  getShopList,\n  getCategories,\n  toggleFilter,\n  updateSearchTerm\n} from \"../../actions\";\n\nclass SearchForm extends Component {\n  componentDidMount() {\n    //  Creating debounced version of fetchData for using in input onChange event\n    this.fetchData = _.debounce(this.props.fetchData, 1000);\n\n    //  Gettings list of shops and categories\n    this.props.getShopList();\n    this.props.getCategories();\n  }\n\n  handleInputChange(event) {\n    const searchTerm = event.currentTarget.value;\n\n    //  Updating search term on input change\n    this.props.updateSearchTerm(searchTerm);\n\n    //  If current state is not 'loading' and search term length > 1, fetching search results from API\n    //  true = newRequest flag for fetchData()\n    !this.props.loading && searchTerm.length > 1 && this.fetchData(searchTerm, true);\n  }\n\n  render() {\n    const { searchTerm, fetchData, toggleFilter } = this.props;\n\n    return (\n      <div className=\"searchbar\">\n        <SearchTips />\n        <div className=\"uk-card-primary uk-card-body uk-card-small uk-width-1-2@m uk-animation-fade uk-animation uk-align-center searchbox\">\n          <div className=\"uk-width-9-10 uk-align-center searchbar_form\">\n            <div className=\"uk-flex uk-flex-center\">\n              <input\n                type=\"text\"\n                className=\"uk-input\"\n                onChange={event => this.handleInputChange(event)}\n                value={searchTerm}\n                onKeyPress={event =>\n                  event.key === \"Enter\" && searchTerm.length > 1 && fetchData(searchTerm, true)\n                }\n              />\n              <button\n                className=\"uk-button uk-button-primary\"\n                onClick={() => fetchData(searchTerm, true)}\n              >\n                Искать\n              </button>\n              <span\n                className=\"filter-icon\"\n                uk-icon=\"settings\"\n                onClick={() => {\n                  toggleFilter(!this.props.showFilter);\n                }}\n              />\n            </div>\n          </div>\n          <SearchFilter />\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchForm.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  getCategories: PropTypes.func.isRequired,\n  getShopList: PropTypes.func.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  updateSearchTerm: PropTypes.func.isRequired,\n  toggleFilter: PropTypes.func.isRequired,\n  showFilter: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    searchTerm: state.searchTerm,\n    showFilter: state.showFilter\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { updateSearchTerm, fetchData, getShopList, getCategories, toggleFilter }\n)(SearchForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchResultItem = props => {\n  const { id, name, url, price } = props.result;\n  return (\n    <div className=\"searchresult\">\n      <div\n        className=\"uk-card-default uk-card-body uk-card-small uk-animation-fade uk-animation-fast listitem\"\n        key={id}\n      >\n        <div className=\"result_header\">\n          <h4>{name}</h4>\n          <span className=\"uk-label\">{price} ₽</span>\n        </div>\n        <ul className=\"uk-breadcrumb\">\n          <li>{props.shopName}</li>\n          <li>{props.catName}</li>\n        </ul>\n        <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n          Перейти в магазин\n        </a>\n      </div>\n    </div>\n  );\n};\n\nSearchResultItem.propTypes = {\n  result: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n  }),\n  shopName: PropTypes.string.isRequired,\n  catName: PropTypes.string.isRequired\n};\n\nexport default SearchResultItem;\n","import React from \"react\";\n\nconst Spinner = props => {\n  return props.isLoading ? (\n    <div className=\"flex-container\">\n      <span uk-spinner=\"\" className=\"uk-align-center loader-fix\" />\n    </div>\n  ) : null;\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport ResultItem from \"./result_item\";\nimport Spinner from \"../spinner\";\nimport { fetchData } from \"../../actions\";\n\nclass ResultList extends Component {\n  componentDidMount() {\n    window.addEventListener(\"scroll\", () => {\n      const { scrollingElement } = document;\n      if (scrollingElement.scrollTop + window.innerHeight >= scrollingElement.offsetHeight) {\n        this.loadMoreResults();\n      }\n    });\n  }\n\n  loadMoreResults() {\n    const { searchTerm, page, resultsNum, loading, fetchData } = this.props;\n    //  false is for newRequest flag for fetchData() function\n    !loading && page * 10 < resultsNum && fetchData(searchTerm, false);\n  }\n\n  getCategoryName(id) {\n    return this.props.categories[id] ? this.props.categories[id] : \"--\";\n  }\n\n  getShopName(id) {\n    return this.props.shops[id] ? this.props.shops[id] : \"--\";\n  }\n\n  render() {\n    const { resultsNum, searchTerm, results, loading, error } = this.props;\n\n    if (error) {\n      return (\n        <div className=\"uk-width-1-2@m uk-align-center\">\n          <div class=\"uk-alert-danger\" uk-alert>\n            <span class=\"uk-alert-close\" uk-close />\n            <p>Возникла ошибка при загрузке результатов. Попробуйте еще раз.</p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"uk-width-1-2@m uk-align-center\">\n        {searchTerm && results && (\n          <h4 className=\"uk-heading-line uk-text-center\">\n            <span>\n              {results\n                ? !!resultsNum\n                  ? \"Найдено товаров: \" + resultsNum\n                  : \"Товаров не найдено :(\"\n                : null}\n            </span>\n          </h4>\n        )}\n\n        {!!resultsNum &&\n          _.map(results, result => {\n            return (\n              <ResultItem\n                key={result.id}\n                result={result}\n                shopName={this.getShopName(result.shop_id)}\n                catName={this.getCategoryName(result.category)}\n              />\n            );\n          })}\n\n        <Spinner isLoading={loading} />\n      </div>\n    );\n  }\n}\n\nResultList.propTypes = {\n  searchTerm: PropTypes.string,\n  filter: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    shops: PropTypes.array.isRequired\n  }),\n  page: PropTypes.number.isRequired,\n  resultsNum: PropTypes.number,\n  loading: PropTypes.bool.isRequired,\n  sort: PropTypes.shape({\n    sortBy: PropTypes.string,\n    sortOrder: PropTypes.string\n  }),\n  fetchData: PropTypes.func.isRequired,\n  shops: PropTypes.object.isRequired,\n  categories: PropTypes.object.isRequired,\n  results: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    results: state.results.data,\n    error: state.results.error,\n    shops: state.shops,\n    categories: state.categories,\n    loading: state.loading,\n    resultsNum: state.results.resultsNum,\n    sort: state.sort,\n    page: state.page,\n    filter: state.filter,\n    searchTerm: state.searchTerm\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchData }\n)(ResultList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SortButton = props => {\n  const buttonStyle = props.sortBy === props.name ? \"primary\" : \"default\";\n  const orderSign = props.sortBy === props.name && props.sortOrder === \"DESC\" ? \"↑\" : \"↓\";\n\n  return (\n    <button\n      className={`uk-button uk-button-${buttonStyle} uk-button-small sort_button`}\n      name={props.name}\n      key={props.name}\n      onClick={props.onClick}\n    >\n      {props.label + orderSign}\n    </button>\n  );\n};\n\nSortButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  sortBy: PropTypes.string.isRequired,\n  sortOrder: PropTypes.oneOf([\"ASC\", \"DESC\", \"\"])\n};\n\nexport default SortButton;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport { sortResults } from \"../../actions\";\nimport SortButton from \"./sort_button\";\nimport { sortFields } from \"../../constants\";\n\nclass SortPanel extends Component {\n  render() {\n    const {\n      resultsNum,\n      results,\n      sort: { sortBy, sortOrder },\n      sortResults\n    } = this.props;\n\n    if (!resultsNum || !results) {\n      return null;\n    } else {\n      return (\n        <div className=\"uk-width-3-4 center-fix\">\n          <div className=\"sort_panel\">\n            <h5 className=\"uk-align-center sort_button\" key=\"h5\">\n              Сортировать по:\n            </h5>\n            {_.map(sortFields, (value, key) => {\n              return (\n                <SortButton\n                  name={key}\n                  key={key}\n                  sortBy={sortBy}\n                  sortOrder={sortOrder}\n                  label={value}\n                  onClick={event => sortResults(event.currentTarget.name, sortOrder)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nSortPanel.propTypes = {\n  results: PropTypes.array,\n  resultsNum: PropTypes.number,\n  filter: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    shops: PropTypes.array.isRequired\n  }),\n  sort: PropTypes.shape({\n    sortBy: PropTypes.string,\n    sortOrder: PropTypes.string\n  }),\n  sortResults: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    results: state.results.data,\n    resultsNum: state.results.resultsNum,\n    filter: state.filter,\n    sort: state.sort\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { sortResults }\n)(SortPanel);\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"uk-text-center uk-text-small uk-text-muted footer\">\n      <p className=\"small\">\n        {\"made by \"}\n        <a href=\"https://github.com/MikhailKarpov87/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Mihanik87\n        </a>\n      </p>\n      <p className=\"small\">\n        <a\n          href=\"https://github.com/MikhailKarpov87/bikes-search\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport SearchForm from \"./search/search_form\";\nimport ResultList from \"./search/result_list\";\nimport SortPanel from \"./search/sort_panel\";\nimport Footer from \"./footer\";\n\nconst SearchMain = () => {\n  return (\n    <div className=\"main-container\">\n      <SearchForm />\n      <SortPanel />\n      <ResultList />\n      <Footer />\n    </div>\n  );\n};\n\nexport default SearchMain;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport SearchMain from \"./components/search\";\n\nconst initialState = {\n  searchTerm: \"\",\n  currentSearchTerm: \"\",\n  results: {},\n  shops: {},\n  categories: {},\n  loading: false,\n  page: 1,\n  sort: {\n    sortBy: \"\",\n    sortOrder: \"\"\n  },\n  filter: {\n    categories: [],\n    shops: []\n  },\n  showFilter: false\n};\n\nconst myStore = composeWithDevTools(applyMiddleware(thunk))(createStore);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={myStore(reducers, initialState)}>\n        <SearchMain />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}